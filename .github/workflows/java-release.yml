name: "JavaGradleRelease"

on:
  workflow_call:
    inputs:
      java-version:
        description: "Java Version"
        type: string
        required: true
      gradle-version:
        description: "Gradle Version"
        type: string
        required: true
      os-version:
        description: "OS Version"
        type: string
        default: ubuntu-latest
        required: false
      depends-on-node:
        description: "Is Node required for build?"
        type: boolean
        default: false
        required: false
      node-version:
        description: "Node version"
        type: string
        default: "10.15.3"
        required: false

    secrets:
      github-username:
        description: "GitHub Username"
        required: true
      github-pat:
        description: "GitHub Packages Token"
        required: true

jobs:
  Release:
    runs-on: ${{ inputs.os-version }}
    steps:
      # Generate change logs and add it as comment in the respective pull request
      - name: Generate Change logs
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && (github.event.pull_request.base.ref == 'master' || github.event.pull_request.base.ref == 'main')
        uses: bala-raj/pull-request-changelog@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.pull_request.base.ref }}
      # Fetching change logs
      - name: Get Change logs from Comment
        uses: peter-evans/find-comment@v1
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && (github.event.pull_request.base.ref == 'master' || github.event.pull_request.base.ref == 'main')
        id: fetchComment
        with:
          issue-number: ${{ github.event.number }}
          comment-author: github-actions[bot]
      # Auto increment tagging
      - name: Tag
        id: tag_version
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && (github.event.pull_request.base.ref == 'master' || github.event.pull_request.base.ref == 'main')
        uses: mathieudutour/github-tag-action@v5.3
        with:
          github_token: ${{ secrets.github-pat }}
      # Create Release For Changes
      - name: Create Release
        uses: actions/create-release@v1
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && (github.event.pull_request.base.ref == 'master' || github.event.pull_request.base.ref == 'main')
        env:
          GITHUB_TOKEN: ${{ secrets.github-pat }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: ${{ github.event.pull_request.title }} # Get pull request Title
          body:
            | # All the Changes history  or features in the corresponding release
            Api : ${{steps.version.outputs.api}}
            WebApp : ${{steps.version.outputs.web}}
            FileServer : ${{steps.version.outputs.fileserver}}
            ${{ steps.fetchComment.outputs.comment-body }}
          draft: false
          prerelease: false # This is not a pre-release so set false
      # For Deleting the Branch once code is merged
      - name: Delete merged branch
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
        uses: koj-co/delete-merged-action@master
        with:
          branches: "!dev, !main, !master, !production"
        env:
          GITHUB_TOKEN: ${{ secrets.github-pat }}
